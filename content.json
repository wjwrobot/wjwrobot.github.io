{"meta":{"title":"faust's blog","subtitle":null,"description":null,"author":"Rick Ong","url":"https://wjwrobot.github.io"},"pages":[{"title":"About","date":"2019-01-19T07:03:45.000Z","updated":"2019-01-21T16:00:00.000Z","comments":true,"path":"about/index.html","permalink":"https://wjwrobot.github.io/about/index.html","excerpt":"","text":"This website is for recording my life. ​ “I understand now, you are attracted to greatness. Because greatness is all in you. But it’s easier to watch greatness. It’s easier to go see greatness, than it is to put in the time, to put in the energy, to discipline yourself, to sacrifice … It’s easier, so that’s why you average. ​ You’ve been doing the same thing, you at the same job. You are experiencing the same things in your life. Nothing has changed. Everything about you is phenomenal. But you’ve consciously made a decision to be average. You are average in school, you are average at your workplace, like everything you do is average, not because it’s average, but because you made a decision. You make a choice to be average … , Why ? ​ Because the people around you are average or maybe you grew up in an average environment or went to an average school or you’ve worked for an average company. So you’ve decided. You’ve decided to go against who you are. No one else feels sorry for you, only you do. That’s the type of mindset when people aren’t successful at life. They sit there and feel sorry for themselves and they want all this fucking sympathy from everybody else. Yet they are not willing to go out there and make shit happen for themselves. Because this is not for every one. This is not for the faint at heart. This is for people who have goals and dreams, that they want to achieve. You could be great if you just showed up. ​ You deserve to see what your life would look like if you gave a 120%. You gotta run after your destiny. The choice that we have though is either to give up or keep on going. I wanna ask you – what are you going to believe. Are you gonna believe … in yourself ? Are you gonna believe everybody else’s judgement on you ? ​ I want your dream to be so clear, so vivid. That when you wake up in the morning all you have to do is step in your dream. ​ I didn’t get it till I got to this age, but I am gonna start running. I messed up junior high, but now I’m gonna start running. I messed up high school, but now I’m gonna start running. The moment you get the word – you want to run … The father said – the day you hear my voice hiding at your heart. When God gives you a chance at an escape, don’t be cute … Run after your destiny. RUN, don’t be ashamed, RUNNN. ​ The harder you work, the harder it is to surrender. And that’s in every aspect of life ​ Start acting like this is your last day on the planet. I deserve to see what my life would like if I gave a 120%. I’d rather aim for the stars and not hit them, than to not aim at all. I’d rather go after it and not get it, than not go after it at all. I’d rather try and fail, than not try at all. ​ I don’t wanna live with the idea – wonder what would’ve happen had I done more with my life. You can’t walk after your destiny. Don’t spend all your time trying to fix what’s behind you. Because you will never be able to fix what’s behind you. You have to run after what’s in front of you “ Video"},{"title":"Projects","date":"2019-01-19T16:00:00.000Z","updated":"2019-01-20T02:13:05.000Z","comments":true,"path":"project/index.html","permalink":"https://wjwrobot.github.io/project/index.html","excerpt":"","text":"This is the project main page."},{"title":"Auto Driver","date":"2019-01-19T13:27:24.000Z","updated":"2019-01-19T14:13:32.000Z","comments":true,"path":"project/autodriver/index.html","permalink":"https://wjwrobot.github.io/project/autodriver/index.html","excerpt":"","text":"This is auto driver project."},{"title":"Computer Vision","date":"2019-01-19T13:27:24.000Z","updated":"2019-01-20T02:12:39.000Z","comments":true,"path":"project/cv/index.html","permalink":"https://wjwrobot.github.io/project/cv/index.html","excerpt":"","text":"This is computer vision project."},{"title":"Speech Recognition","date":"2019-01-19T13:27:24.000Z","updated":"2019-01-19T14:19:13.000Z","comments":true,"path":"project/nlp/index.html","permalink":"https://wjwrobot.github.io/project/nlp/index.html","excerpt":"","text":"This is speech recognition project."}],"posts":[{"title":"An Introduction to Rust","slug":"An-Introduction-to-Rust","date":"2020-02-09T02:37:55.000Z","updated":"2020-02-09T12:25:06.898Z","comments":true,"path":"2020/02/09/An-Introduction-to-Rust/","link":"","permalink":"https://wjwrobot.github.io/2020/02/09/An-Introduction-to-Rust/","excerpt":"An Introduction to the Rust language.","text":"An Introduction to the Rust language. OwnershipOwnership Rules: Each value in Rust has a variable that’s called its owner. There can only be one owner at a time. Where the owner goes out of scope, the value will be droped. Memory and AllocationWays Variables and Data Interact: Move123// This String's owner from s1 move to s2let s1 = String::from(\"hi\");let s2 = s1; Ways Variables and Data Interact: Clone1234// do a deeply copy of the heap data of the String (expensive)let s1 = String::from(\"hi\");let s2 = s1.clone();println!(\"&#123;&#125;, &#123;&#125;\", s1, s2); Stack-Only Data: Copy123let x = 1;let y = x;println!(\"&#123;&#125;, &#123;&#125;\", x, y); References and BorrowingAdd ampersand before variable let the variable become a reference which refersto the value but does not own it. Just as variables are immutable by default, so as references. Mutable References12345678fn main() &#123; let mut s = String::from(\"hi\"); change(&amp;mut s);&#125;fn change(some_string: &amp;mut String) &#123; some_string.push_str(\", Rust\");&#125; A reference’s scope starts from where it is introduced and continues through thelast time that reference is used. At any given time, you can have either one mutable reference or any number ofimmutable references. References must always be valid. Dangling References1234567891011fn main() &#123; let reference_to_nothing = dangle();&#125;fn dangle() -&gt; &amp;String &#123; // dangle returns a reference to a String let s = String::from(\"hello\"); // s is a new String &amp;s // we return a reference to the String, s&#125; // Here, s goes out of scope, and is dropped. Its memory goes away. // Danger! The Slice TypeA string slice is a reference to part of a String. 12let s = String::from(\"hello world\");let hello = &amp;s[0..5]; 123456789101112131415fn main() &#123; let mut s = String::from(\"hello world\"); let word = first_word(&amp;s);&#125;fn first_word(s: &amp;String) -&gt; &amp;str &#123; let bytes = s.as_bytes(); for (i, &amp;item) in bytes.iter().enumerate() &#123; if item == b' ' &#123; return &amp;s[..i]; &#125; &#125; &amp;s[..]&#125; String literal is slice that has &amp;str type, so it is immutable. Change the parameter’s type of function first_word for more general. 123456789101112fn main() &#123; let my_string = String::from(\"hello world\"); let word = first_word(&amp;my_string[..]); let my_string_literal = \"hello world\"; let word = first_word(&amp;my_string_literal[..]); let word = first_word(my_string_literal);&#125;fn first_word(s: &amp;str) -&gt; &amp;str &#123; // same as above&#125; Other slice:12let a = [1, 2, 3, 4, 5];let slice = &amp;a[1..3]; This slice has the type &amp;[i32] StructDefining and Instantiating Structs123456789101112131415struct User &#123; username: String, email: String, sign_in_count: u64, active: bool,&#125;let mut user1 = User &#123; email: String::from(\"someone@example.com\"), username: String::from(\"someusername123\"), active: true, sign_in_count: 1,&#125;;user1.email = String::from(\"a@b.com\"); Use the field init shorthand syntax when variables and fields have the same name.12345678fn build_user(email: String, username: String) -&gt; User &#123; User &#123; email, username, active: true, sign_in_count: 1, &#125;&#125; Create instances from other instances with struct update syntax.12345let user2 = User &#123; email: String::from(\"another@example.com\"), username: String::from(\"anotherusername567\"), ..user1&#125;; Tuple Struct:12345struct Color(i32, i32, i32);struct Point(i32, i32, i32);let black = Color(0, 0, 0);let origin = Point(0, 0, 0); Structs that don’t have any fields are called unit-like structs. MethodMethods are similar to functions, but they are defined within the context of astruct (or an enum or a trait obejct), and their first parameter is alwaysself, which represents the instance of the struct the method is being called on. 12345678910111213141516171819202122232425#[derive(Debug)]struct Rectangle &#123; width: u32, height: u32,&#125;impl Rectangle &#123; fn area(&amp;self) -&gt; u32 &#123; self.width * self.height &#125; fn can_hold(&amp;self, other: &amp;Rectangle) -&gt; bool &#123; self.width &gt; other.width &amp;&amp; self.height &gt; other.height &#125;&#125;fn main() &#123; let rect1 = Rectangle &#123; width: 30, height: 50&#125;; let rect2 = Rectangle &#123; width: 10, height: 40&#125;; let rect3 = Rectangle &#123; width: 60, height: 45&#125;; println!(\"&#123;&#125;\", rect1.area()); println!(\"&#123;&#125;\", rect1.can_hold(&amp;rect2)); println!(\"&#123;&#125;\", rect1.can_hold(&amp;rect3));&#125; Associated FunctionsAssociated functions are implemented within impl blocks, which don’t takeself as a parameter. And they are associated with the struct. 12345impl Rectangle &#123; fn square(size: u32) -&gt; Rectangle &#123; Rectangle &#123;width: size, heigtht: size&#125; &#125;&#125; Access it with :: syntax:1let sq = Rectangle::square(3); :: syntax is used for both associated functions and namespaces created by modules. Enum1234567891011121314enum IpAddrKind &#123; V4, V6,&#125;struct IpAddr &#123; kind: IpAddrKind, address: String,&#125;let home = IpAddr &#123; kind: IpAddrKind::V4, address: String::from(\"127.0.0.1\"),&#125;; Putting data directly into each enum variant.12345678enum IpAddr &#123; V4(String), V6(String),&#125;let home = IpAddr::V4(String::from(\"127.0.0.1\"));let loopback = IpAddr::V6(String::from(\"::1\")); Each variant can have different types and amounts of associated data.12345678enum IpAddr &#123; V4(u8, u8, u8, u8), V6(String),&#125;let home = IpAddr::V4(127, 0, 0, 1);let loopback = IpAddr::V6(String::from(\"::1\")); ReferencesThe Rust Programming Language","categories":[{"name":"Rust","slug":"Rust","permalink":"https://wjwrobot.github.io/categories/Rust/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://wjwrobot.github.io/tags/Rust/"}]},{"title":"PyTorch Basic","slug":"PyTorch-Basic","date":"2020-02-03T11:54:39.000Z","updated":"2020-02-03T12:39:03.506Z","comments":true,"path":"2020/02/03/PyTorch-Basic/","link":"","permalink":"https://wjwrobot.github.io/2020/02/03/PyTorch-Basic/","excerpt":"Basic knowledges about PyTorch.","text":"Basic knowledges about PyTorch. Saving &amp; loading models1234567891011121314151617import torchimport torch.optim as optim# modelclass Net(nn.Module): def __init__(self): super().__init__() pass def forward(self, x): passmodel = Net()# optimizeroptimizer = optim.SGD(model.parameters(), lr=0.001, momentum=0.9)torch Method 1: Saving &amp; loading model’s parametersUse state_dict 123456789# savetorch.save(model.state_dict(), PATH) # use .pt or .pth as file extension# loadmodel = Net(*args, **kwargs)model.load_state_dict(torch.load(PATH))# must call it to set dropout and batch normalization layers to evaluation mode# before running inferencemodel.eval() Method 2: Saving &amp; loading entile model12345678# savetorch.save(model, PATH)# load# model must be defined somewheremodel = torch.load(PATH)model.eval() Saving &amp; loading a general checkpoint for inference and/or resuming training12345678# savetorch.save(&#123; 'epoch': epoch, 'model_state_dict': model.state_dict(), 'optimizer_state_dict': optimizer.state_dict(), 'loss': loss, ... &#125;, PATH) # use .tar as file extension 12345678910111213# loadmodel = Net(*args, **kwargs)optimizer = TheOptimizerClass(*args, **kwargs)checkpoint = torch.load(PATH)model.load_state_dict(checkpoint['model_state_dict'])optimizer.load_state_dict(checkpoint['optimizer_state_dict'])epoch = checkpoint['epoch']loss = checkpoint['loss']model.eval()# - or -model.train() ReferencesSaving and loading models","categories":[{"name":"PyTorch","slug":"PyTorch","permalink":"https://wjwrobot.github.io/categories/PyTorch/"}],"tags":[{"name":"PyTorch","slug":"PyTorch","permalink":"https://wjwrobot.github.io/tags/PyTorch/"}]},{"title":"C++ Type Casting","slug":"C-Type-Casting","date":"2020-02-02T07:50:11.000Z","updated":"2020-02-02T13:16:21.626Z","comments":true,"path":"2020/02/02/C-Type-Casting/","link":"","permalink":"https://wjwrobot.github.io/2020/02/02/C-Type-Casting/","excerpt":"An introduction to C++ type casting.","text":"An introduction to C++ type casting. (Declare: all code snippets in this post come from this) Type CastingUnrestricted explit type-casting allows to convert any pointer into any otherpointer type, independently of the types they point to. Which may make eitherrun-time error or unexpected behaviors. In order to control type conversions between classes, We have four specificcasting operators: dynamic_cast, static_cast, reinterpret_cast andconst_cast. Their format is like dynamic_cast&lt;new_type&gt;(expression). dynamic_castdynamic_cast performs run time check. “dynamic_cast can only be used with pointers and references to classes(or with void*). Its purpose is to ensure that the result of the type conversionpoints to a valid complete object of the destination pointer type.” 1234567891011121314151617181920212223242526272829303132// dynamic_cast#include &lt;iostream&gt;#include &lt;exception&gt;class Base &#123; virtual void dummy() &#123;&#125;&#125;;class Derived: public Base &#123; int a;&#125;;int main() &#123; try &#123; Base* pba = new Derived; Base* pbb = new Base; Derived* pd; pd = dynamic_cast&lt;Derived*&gt;(pba); // downcast if (pd == 0) &#123; std::cout &lt;&lt; \"Null pointer on first type-cast.\\n\"; &#125; pd = dynamic_cast&lt;Derived*&gt;(pbb); // downcast if (pd == 0) &#123; std::cout &lt;&lt; \"Null pointer on second type-cast.\\n\"; &#125; &#125; catch (exception&amp; e) &#123; std::cout &lt;&lt; \"Exception: \" &lt;&lt; e.what(); &#125; return 0;&#125; Only the first one is successful, because after type casting the first one ispointing to a full object of class Derived, meanwhile, the second one ispointing to an object of class Base, which is incompleted against Derived. “When dynamic_cast cannot cast a pointer because it is not a complete objectof the required class, it returns a null pointer to indicate the failure. Ifdynamic_cast is used to convert to a reference type and the conversion is notpossible, an exception of type bad_cast is thrown instead. dynamic_cast can also perform the other implict casts allowed on pointers.“ static_caststatic_cast performs compile time check. “static_cast can perform conversions between pointers to related classes, notonly upcasts (from pointer-to-derived to pointer-to-base),but also downcasts.No checks are performed during runtime to guarantee that the object beingconverted is in fact a full object of the destination type. Therefore, it is upto the programmer to ensure that the conversion is safe. On the other side, itdoes not incur the overhead of the type-safety checks of dynamic_cast.” reinterpret_castconst_castRemove or add const. ReferencesType conversions Casting in C++","categories":[{"name":"C++","slug":"C","permalink":"https://wjwrobot.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://wjwrobot.github.io/tags/C/"}]},{"title":"Link Static/Dynamic Library in C/C++ on Linux","slug":"Link-Static-Dynamic-Library-in-C-C-on-Linux","date":"2020-01-28T07:08:12.000Z","updated":"2020-01-28T07:12:07.938Z","comments":true,"path":"2020/01/28/Link-Static-Dynamic-Library-in-C-C-on-Linux/","link":"","permalink":"https://wjwrobot.github.io/2020/01/28/Link-Static-Dynamic-Library-in-C-C-on-Linux/","excerpt":"Note about link library in C/C++.","text":"Note about link library in C/C++. Link Static/Dynamic Library in C/C++ using GCC CompilerStatic LibraryA static library is basically an archive (like a zip file) of object files, which are compiled from the .c/.cpp source code. Compile files into *.o object files.1gcc -c test1.cpp test2.cpp (The -c switch means: Compile and assemble, but do not link.) Thus, we get two files test1.o and test2.o. Now, we can use ar to put these object files together into a single static library. 1ar rsv testlib.a test1.o test2.o Now the testlib.a contains test1.o and test2.o. 1gcc -o test.out test.c testlib.a Alternatively, you could use the explicity linking options to link the static library (-L switch specifies the static library path and -l followed by the name of the static library): 1gcc -o test.out test.c -L. -ltestlib The static library is distributed with a function declaration header files .h, so that you know how to invoke them and the compiler takes care of them e.g. linking .a static libraries into your executables. Dynamic Link LibraryThe Dynamic Link Library (DLL) is stored separately from the target application and shared among different applications, compared to Static Library. The DLL is the file extension on Windows while on Linux, it is *.so (Shared Object). The .so/.dll can be loaded right before the application starts or during the application’s runtime. On Windows, the Win32 API LoadLibrary is used while on Linux gcc compiler, the dlopen function is used. 1gcc -shared -o libhello.so -fPIC hello.c Another example:1g++ Application.cpp -o Application -I/home/wjw/dev/Youtube/OpenGL/Dependencies/GLFW/include -L/home/wjw/dev/Youtube/OpenGL/Dependencies/GLFW/lib -lglfw (Where shared library is called libglfw.so)(Note: You should also do1export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/dev/Youtube/OpenGL/Dependencies/GLFW/lib ) Calling C++ Shared Library from Python Code1234567891011121314151617181920212223// https://helloacm.comextern \"C\"&#123; // A function adding two integers and returning the result int SampleAddInt(int i1, int i2) &#123; return i1 + i2; &#125; // A function doing nothing ;) void SampleFunction1() &#123; // insert code here &#125; // A function always returning one int SampleFunction2() &#123; // insert code here return 1; &#125;&#125; Compile it as Shared Library:1g++ -Wall -O3 -shared TestLib.c -o TestLib.so 12345678910#!/usr/bin/pythonimport ctypesdef main(): TestLib = ctypes.cdll.LoadLibrary('/home/wjw/misc/cpp_static_dynamic_lib/TestLib.so') print(TestLib.SampleAddInt(1, 2))if __name__ == '__main__': main() ReferencesHow to Link Static Library in C/C++ using GCC CompilerHow to Use the Dynamic Link Library in C++ Linux (gcc compiler)Calling C++ Shared Library from Python Code (Linux Version)","categories":[{"name":"C++","slug":"C","permalink":"https://wjwrobot.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://wjwrobot.github.io/tags/C/"},{"name":"linker","slug":"linker","permalink":"https://wjwrobot.github.io/tags/linker/"}]},{"title":"Build A Speech Assistant App with Python","slug":"Build-A-Speech-Assistant-App-with-Python","date":"2020-01-27T09:01:53.000Z","updated":"2020-01-27T09:09:53.809Z","comments":true,"path":"2020/01/27/Build-A-Speech-Assistant-App-with-Python/","link":"","permalink":"https://wjwrobot.github.io/2020/01/27/Build-A-Speech-Assistant-App-with-Python/","excerpt":"Using the speech recognition library and Google’s text-to-speech API to build aspeech recognition app.","text":"Using the speech recognition library and Google’s text-to-speech API to build aspeech recognition app. Create a new virtual python environment within your project’s root directory andactivate it.12python3 -m venv venvsource venv/bin/activate Install necessary library:1pip install speechrecognition pyaudio ReferenceBuild A Python Speech Assistant App","categories":[{"name":"Python","slug":"Python","permalink":"https://wjwrobot.github.io/categories/Python/"}],"tags":[{"name":"Speech Recognition","slug":"Speech-Recognition","permalink":"https://wjwrobot.github.io/tags/Speech-Recognition/"}]},{"title":"JavaScript Crash Course","slug":"JavaScript-Crash-Course","date":"2020-01-27T02:46:27.000Z","updated":"2020-01-28T09:43:48.891Z","comments":true,"path":"2020/01/27/JavaScript-Crash-Course/","link":"","permalink":"https://wjwrobot.github.io/2020/01/27/JavaScript-Crash-Course/","excerpt":"An introduction to basic javascript syntax.","text":"An introduction to basic javascript syntax. Declare variables using keywords let, const or var (unrecommended).12345// let, constlet age = 30;age = 31;let num;const name = 'peter'; Primary data types: Strings, Numbers, Boolean, null, undefined, Symbol123456789const name = 'john';const age = 20;const rating = 4.5;const iscool = true;const x = null;const y = undefined;let z;console.log(typeof z); String1234// Template Stringconsole.log(`My name is $&#123;name&#125; and I am $&#123;age&#125;`);// Old styleconsole.log('My name is ' + name + ' and I am ' + age); String manipulation12345const s = 'Hello World';console.log(s.length);console.log(s.toUpperCase());console.log(s.substring(0, 5).toLowerCase());console.log(s.split('')); Array12345678910const numbers = new Array(1, 2, 3);const fruits = ['apples', 'oranges', 'pears'];// notice you can't reassign const variablesfruits[3] = 'grapes';fruits.push('mangos');fruits.unshift('strawberries');fruits.pop();console.log(fruits);console.log(fruits.indexOf('oranges'));console.log(Array.isArray(fruits)); Object literals1234567891011121314151617181920// Object literalsconst person = &#123; firstName: 'John', lastName: 'Snow', age: 20, hobbies: ['music', 'movies', 'sports'], address: &#123; street: '50 main st', city: 'Boston', state: 'MA' &#125;&#125;;person.email = 'john@gmail.com';// pull things outconst &#123; firstName, lastName, address: &#123; city &#125; &#125; = person;console.log(person.hobbies[1], person.address.city);console.log(firstName, city) Convert to JSON format1234567891011121314151617181920212223const todos = [ &#123; id: 1, text: 'Take out trash', isCompleted: true &#125;, &#123; id: 2, text: 'Meeting with boss', isCompleted: true &#125;, &#123; id: 3, text: 'Dentist appt', isCompleted: false &#125;];// console.log(todos[1].text);// Convert to JSONconst todoJSON = JSON.stringify(todos);console.log(todoJSON); Loop123456789// for loopfor(let i = 0; i &lt; todos.length; i++) &#123; console.log(todos[i].text);&#125;// simpler versionfor(let todo of todos) &#123; console.log(todo.text)&#125; High order array method: forEach, map, filter1234567891011121314151617181920212223242526// forEachtodos.forEach(function(todo) &#123; console.log(todo.text);&#125;);// mapconst todoText = todos.map(function(todo) &#123; return todo.text;&#125;);console.log(todoText);// filterconst todoCompleted = todos.filter(function(todo) &#123; return todo.isCompleted === true;&#125;);console.log(todoCompleted);// combine filter and mapconst todoCombine = todos .filter(function(todo) &#123; return todo.isCompleted === true; &#125;) .map(function(todo) &#123; return todo.text; &#125;);console.log(todoCombine); 123456789101112131415const x = 10;const color = x &gt; 10 ? 'red' : 'blue';console.log(color);switch (color) &#123; case 'red': console.log('color is red'); break; case 'blue': console.log('color is blue'); break; default: console.log('color is NOT red or blue'); break;&#125; Function definition12345678910111213141516// Functionfunction addNums(num1, num2 = 1) &#123; return num1 + num2;&#125;// Arrow functionconst addNums2 = (num1, num2 = 1) =&gt; &#123; return num1 + num2;&#125;;console.log(addNums2(4));const addNums3 = (num1 = 1, num2 = 1) =&gt; num1 + num2;console.log(addNums3(2, 2));const addNums4 = num1 =&gt; num1 + 5;console.log(addNums4(3)); Class definition1234567891011121314151617181920212223242526272829303132333435363738// Constructor functionfunction Person(firstName, lastName, dob) &#123; this.firstName = firstName; this.lastName = lastName; this.dob = new Date(dob);&#125;// use prototypePerson.prototype.getBirthYear = function() &#123; return this.dob.getFullYear();&#125;;Person.prototype.getFullName = function() &#123; return `$&#123;this.firstName&#125; $&#123;this.lastName&#125;`;&#125;;// Class (prefered way do the same thing as above)class Person &#123; constructor(firstName, lastName, dob) &#123; this.firstName = firstName; this.lastName = lastName; this.dob = new Date(dob); &#125; getBirthYear() &#123; return this.dob.getFullYear(); &#125; getFullName() &#123; return `$&#123;this.firstName&#125; $&#123;this.lastName&#125;`; &#125;&#125;// Instantiate objectconst person1 = new Person('John', 'Snow', '4-3-1980');console.log(person1.getBirthYear());console.log(person1.getFullName());console.log(person1); DOM (document object model)12345678910111213141516// Single elementconsole.log(document.getElementById('my-form'));console.log(document.querySelector('.container'));// Multiple elementconsole.log(document.querySelectorAll('.item')); // recommendconsole.log(document.getElementsByClassName('item'));//const ul = document.querySelector('.items');ul.lastElementChild.remove();ul.firstElementChild.textContent = 'Hello';ul.children[1].innerText = 'Brad';const btn = document.querySelector('.btn');btn.style.background = 'red'; Events123456789const btn = document.querySelector('.btn');btn.addEventListener('click', e =&gt; &#123; e.preventDefault(); document.querySelector('#my-form').style.background = '#ccc'; document.querySelector('body').classList.add('bg-dark'); document.querySelector('.items').lastElementChild.innerHTML = '&lt;h1&gt;Hello&lt;/h1&gt;';&#125;); 12345678910111213141516171819202122232425262728const myForm = document.querySelector('#my-form');const nameInput = document.querySelector('#name');const emailInput = document.querySelector('#email');const msg = document.querySelector('.msg');const userList = document.querySelector('#users');myForm.addEventListener('submit', onSubmit);function onSubmit(e) &#123; e.preventDefault(); if (nameInput.value === '' || emailInput.value === '') &#123; msg.classList.add('error'); msg.innerHTML = 'Please enter all fields'; setTimeout(() =&gt; msg.remove(), 3000); &#125; else &#123; const li = document.createElement('li'); li.appendChild( document.createTextNode(`$&#123;nameInput.value&#125; : $&#123;emailInput.value&#125;`) ); userList.appendChild(li); // Clear fields nameInput.value = ''; emailInput.value = ''; &#125;&#125; ReferenceJavascript Crash Course for Beginners","categories":[{"name":"Web","slug":"Web","permalink":"https://wjwrobot.github.io/categories/Web/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://wjwrobot.github.io/tags/JavaScript/"}]},{"title":"OpenGL","slug":"OpenGL","date":"2020-01-24T15:21:40.000Z","updated":"2020-01-28T07:01:19.292Z","comments":true,"path":"2020/01/24/OpenGL/","link":"","permalink":"https://wjwrobot.github.io/2020/01/24/OpenGL/","excerpt":"OpenGL notes.","text":"OpenGL notes. Build glew locally: Download “.tgz” file, and extract it in the dependency directory of project.1tar zxvf glew-20200115.tgz change build prefix in Makefile12GLEW_PREFIX ?= /home/wjw/dev/Youtube/OpenGL/Dependencies/GLEWGLEW_DEST ?= /home/wjw/dev/Youtube/OpenGL/Dependencies/GLEW build with make123makemake installmake clean ReferencesOpenGL YouTube course","categories":[{"name":"C++","slug":"C","permalink":"https://wjwrobot.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://wjwrobot.github.io/tags/C/"},{"name":"OpenGL","slug":"OpenGL","permalink":"https://wjwrobot.github.io/tags/OpenGL/"}]},{"title":"Machine Learning Series 1: Decision Trees","slug":"Machine-Learning-Series-1-Decision-Trees","date":"2020-01-24T12:41:37.000Z","updated":"2020-01-26T08:12:29.939Z","comments":true,"path":"2020/01/24/Machine-Learning-Series-1-Decision-Trees/","link":"","permalink":"https://wjwrobot.github.io/2020/01/24/Machine-Learning-Series-1-Decision-Trees/","excerpt":"An introduction to Decision Tree.","text":"An introduction to Decision Tree. Decision Trees are capable of performing classification and regression like SVM, and even multi-output problems.","categories":[{"name":"MachineLearning","slug":"MachineLearning","permalink":"https://wjwrobot.github.io/categories/MachineLearning/"}],"tags":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://wjwrobot.github.io/tags/Machine-Learning/"},{"name":"Decision Trees","slug":"Decision-Trees","permalink":"https://wjwrobot.github.io/tags/Decision-Trees/"}]},{"title":"Using TensorBoard with Pytorch in Colab","slug":"Using-TensorBoard-with-Pytorch-in-Colab","date":"2019-12-02T08:53:15.000Z","updated":"2020-01-28T09:38:32.345Z","comments":true,"path":"2019/12/02/Using-TensorBoard-with-Pytorch-in-Colab/","link":"","permalink":"https://wjwrobot.github.io/2019/12/02/Using-TensorBoard-with-Pytorch-in-Colab/","excerpt":"PyTorch with TensorBoard.","text":"PyTorch with TensorBoard. Using Magic commandsPut %load_ext tensorboard at the beginning, then if you want to use tensorboard using %tensorboard --logdir=&quot;your_logdir&quot; referencesHow to use Tensorboard with PyTorch in Google Colab","categories":[],"tags":[]},{"title":"Install and Configure Arch Linux","slug":"Install-and-Configure-Arch-Linux","date":"2019-05-05T11:53:04.000Z","updated":"2020-01-24T12:34:03.263Z","comments":true,"path":"2019/05/05/Install-and-Configure-Arch-Linux/","link":"","permalink":"https://wjwrobot.github.io/2019/05/05/Install-and-Configure-Arch-Linux/","excerpt":"Steps to install Arch Linux and configure it for daily use and work.","text":"Steps to install Arch Linux and configure it for daily use and work. Pre-installationVerify signatureUse GnuPG to verify downloaded package. 1gpg --keyserver pgp.mit.edu --keyserver-options auto-key-retrieve --verify archlinux-&lt;version&gt;-x86_64.iso.sig Build bootable live environmentPlug in USB and check its device name by 1lsblk Asume its name is /dev/sdb, then use dd to build the bootable system to usb (warning before press “ENTER”, double check the command to prevent from destroying system) 1dd if=/way/to/arch/file of=/dev/sdb Verify the boot mode1ls /sys/firmware/efi/efivars If the directory does not exist, the system may be booted in BIOS or CSM mode, otherwise, in UEFI mode. If it’s in UEFI mode, go ahead. Plug in USB, shut down computer, enter into BIOS system interface with holding F2 then press power button. (Different motherboards diverse in entering BIOS) If you can’t see a boot option “boot from USB”, go to create a boot option by select your boot file which end with .efi. And then put this option to number 1 boot option. OK, save change and reboot system. Now we had entered the Arch live system. Connect to the InternetThe installation image enables the dhcpcd daemon for wired network devices on boot. The connection can be verified with ping, If you use wifi, you should configure wifi with wifi-menu 1wifi-menu 1ping -c 3 baidu.com Update the system clockUse timedatectl to ensure the system clock is accurate 1timedatectl set-ntp true (To check the service status, use ) 1timedatectl status Partition the disksWhen recognized by the live system,disks are assigned to a block device. To identify these devices, use lsblk or fdisk -l 1lsblk The following partitions are required for a chosen device: One partition for the root directory / . If UEFI is enabled, an EFI system partition . (The following are alternative) Swap space can be set on a separate partition or a swap file . /home directory for users . (Note : If you want to create any stacked block devices for LVM, disk encryption, or RAID, do it now.) To modify partition tables, use cfdisk, fdisk or parted. 1cfdisk /dev/sda my partition plan for system with 4G RAM and 500G storage device 123/dev/sda1 200M /boot/efi EFI System/dev/sda2 250G / Linux fs/dev/sda3 remaining /home Linux fs Format the partitionsOnce the partitions have been created, each must be formatted with an appropriate file system. 1234mkfs.fat -F32 /dev/sda1mkfs.ext4 /dev/sda2mkfs.ext4 /dev/sda3 Mount the file systemsMount the file system on the root partition to /mnt 1mount /dev/sda2 /mnt Create mount points for any remaining partitions and mount them accordingly 12345mkdir /mnt/boot/efimount /dev/sda1 /mnt/boot/efimkdir /mnt/homemount /dev/sda3 /mnt/home genfstab will later detect mounted file systems and swap space. We have accomplished the work for Pre-Installation, now enter the process of Installation. InstallationSelect the mirrorsPackages to be installed must be downloaded from mirror servers, which are defined in /etc/pacman.d/mirrorlist . Use vim to select your country’s mirror to the top. 1vim /etc/pacman.d/mirrorlist Install the base packagesUse the pacstrap script to install the base and base-devel package groups: 1pacstrap /mnt base base-devel Configure the systemFstabGenerate an fstab file (use -U or -L to define by UUID or labels, respectively) 1genfstab -U /mnt &gt;&gt; /mnt/etc/fstab and check the resulting file. ChrootChange root into the new system: 1arch-chroot /mnt Configure wifi12pacman -S dialog wpa_suppliantwifi-menu Time zone1ln -sf /usr/share/zoneinfo/Asian/Shanghai /etc/localtime Generate /etc/adjtime 1hwclock --systohc This command assumes the hardware clock is set to UTC. LocalizationUncomment en_US.UTF-8 UTF-8 and other needed locales in /etc/locale.gen,and generate them 1locale-gen Set the LANG variable in /etc/locale.conf 1LANG=en_US.UTF-8 Network configurationCreate the hostname file /etc/hostname 1echo 'Arch' &gt; /etc/hostname ​Add matching entries to /etc/hosts 1echo -e \"127.0.0.1\\tlocalhost\\n::1\\t\\tlocalhost\\n127.0.1.1\\tArch.localdomain\\tArch\" &gt; /etc/hosts If the system has a permament IP address, it should be used instead of 127.0.1.1 . InitramfsCreating a new initramfs is usually not required, because mkinitcpio was run on installation of the linux package with pacstrap . For special configurations, modify the mkinitcpio.conf file and recreate the initramfs image : 1mkinitcpio -p linux Set root password1passwd Install bootloaderA Linux-capable boot loader must be installed in order to boot Arch Linux. If you have an Intel or AMD CPU, enable microcode updates. Let’s install GRUB boot loader: Download grub and efibootmgr1pacman -S grub efibootmgr GRUB is the bootloader while efibootmgr is used by the GRUB installation script to write boot entries to NVRAM . (Mount the EFI system partition at mount point, for example, /boot/efi ) Install the GRUB EFI applicationInstall the GRUB EFI application grubx64.efi to /boot/efi*/EFI/GRUB/ and install its modules to /boot/grub/x86_64-efi/ . 1grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB (After the above install completed the main GRUB directory is located at /boot/grub/ . Note that grub-install also tries to create an entry tin the fireware boot manager, named GRUB in the above example.) Generated grub.cfgUse the grub-mkconfig tool to generate /boot/grub/grub.cfg 1grub-mkconfig -o /boot/grub/grub.cfg (Note: Remember that /boot/grub/grub.cfg has to be re-generated after any change to /etc/default/grub or files in /etc/grub.d . After installing or removing a kernel, you just need to re-run the above grub-mkconfig command.) RebootExit the chroot environment, then manually unmount all the partitions.Finally, restart the machine. 123exitumount -R /mntreboot Post-installationAdd a new user12useradd -m -G wheel -s /bin/bash wjwpasswd wjw To grant sudo access to user wjw run visudo and add “wjw ALL=(ALL) ALL“ 1visudo FontSee available fonts 1fc-list Download fonts 12sudo pacman -S wqy-microhei ttf-dejavuyay -S ttf-symbola or download packages manually and put font files to the .local/share/fonts/ directory. If you want to change console font, put font files in the /usr/share/kbd/consolefonts directory. Then go to see the console fonts, and select one.. 12ls /usr/share/kbd/consolefontsecho \"FONT=sun12x22\\nFONT_MAP=8859-2\" &gt; /etc/vconsole.conf Graphical user interfaceInstall Xorg1sudo pacman -S xorg-server xorg-xinit xorg-xinput configure ~/.xinitrc file 1[[ -f ~/.Xresources ]] &amp;&amp; xrdb -merge -I$HOME ~/.Xresources Install i3-gaps and related programsInstall i3-gaps and configure to start from ~/.xinitrc . (rofi for replacing d-menu, feh for setting wallpaper, light for brightness control, scrot for screenshot, i3blocks for replacing i3status, acpi for i3blocks’s battery module) 12sudo pacman -S i3-gaps i3blocks rofi feh light scrot acpiecho 'exec i3' &gt; ~/.xinitrc You can start up i3 manually by typing command startx or set it to automatically.If you use zsh ,put the following into the ~/.zprofile to auto start X at login 123if [[ ! $DISPLAY &amp;&amp; $XDG_VTNR -eq 1 ]]; then exec startxfi Install ssr123456sudo pacman -S git wget pythonwget http://www.djangoz.com/ssrsudo mv ssr /usr/local/binsudo chmod 744 /usr/local/bin/ssrssr installssr config Wireless configureInstall dialog and wpa_suppliant for using wifi-menu . (or optionally Install networkmanager ) 1sudo pacman -S dialog wpa_suppliant Enabling wifi auto connecting when boot. (use netctl) 1sudo wifi-menu -o use command above to generate the profile in /etc/netctl for use of netctl. 1sudo netctl enable your_profile SoundIf no sound because of Master set to HDMI, go to change it to PCM. 1sudo echo -e \"defaults.pcm.card 1\\ndefaults.pcm.device 0\\ndefaults.ctl.card 1\" &gt; /etc/asound.conf Download pulseaudio and related control command utils. 1sudo pacman -S pulseaudio pulsemixer playerctl And download alsa-utils for controling alsa1sudo pacman -S alsa-utils Useful program1sudo pacman -S firefox neofetch yay123git clone https://aur.archlinux.org/yay.gitcd yaymakepkg -si lxappearance &amp; qt5ctqt5ct for qt5 based programs, while lxappearance for gtk based programs. 1sudo pacman -S lxappearance qt5ct gtk related configure files: 12~/.gtkrc-2.0~/.config/gtk-3.0/settings.ini GTK Theme1sudo pacman -S adapta-gtk-theme Icon theme123git clone https://github.com/horst3180/arc-icon-theme --depth 1 &amp;&amp; cd arc-icon-theme./autogen.sh --prefix=/usrsudo make install add the following environment variable to ~/.pam_environment 1QT_QPA_PLATFORMTHEME=qt5ct laptop power saving1sudo pacman -S tlp then configure it: 12systemctl enable tlp.service tlp-sleep.servicesystemctl mask systemd-rfkill.service systemd-rfkill.socket (Note: tlp.service starts NetworkManager.service if it is available. If you use a different network manager, mask NetworkManager.service or edit tlp.service and remove the service out of line Wants=) System proxy (Privoxy)1sudo pacman -S privoxy then edit /etc/privoxy/config file and add the following line the 5.2 section (note the . at the end) 1forward-socks5 / 127.0.0.1:1080 . It means that transact all http requests to socks5 and redirect to localhost’s 1080 port (change this value to your ssr listening port) then you should go to start and enable privoxy.service . 12systemctl start privoxy.servicesystemctl enable privoxy.service Privoxy’s default listening port is 8118, so your should set your http proxy address to 127.0.0.1:8118 . 1export http_proxy=\"http://127.0.0.1:8118\" Configure git proxy 1git config --global http.proxy 127.0.0.1:8118 File managerranger (use w3m to preview image) and pcmanfm12sudo pacman -S ranger highlight w3msudo pacman -S pcmanfm tmux &amp; tmux-resurrect12sudo pacman -S tmuxgit clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm Build packageuse asp or pbget 1sudo pacman -S asp DockerDownload docker, then create a group named docker and add user to this group for using docker without “sudo” command for regular user. 123sudo pacman -S dockersudo groupadd dockersudo usermod -aG docker $USER Then enable and start docker.service 12systemctl enable docker.servicesystemctl start docker.service Setting proxy for docker: 12mkdir /etc/systemd/system/docker.service.dtouch /etc/systemd/system/docker.service.d/proxy.conf put following content to the file above 123[Service]Environment=&quot;HTTP_PROXY=192.168.1.1:8118&quot;Environment=&quot;HTTPS_PROXY=192.168.1.1:8118&quot; Then reload units 1systemctl daemon-reload Check whether setting successfully 1systemctl show docker --property Environment TensorflowDownload nvidia-docker 1yay -S nvidia-docker Pull latest tensorflow-gpu 1docker pull tensorflow/tensorflow:latest-gpu-py3 1docker run --runtime=nvidia -it tensorflow/tensorflow:latest-gpu-py3 bash (Note: nvidia-docker v1 uses the nvidia-docker alias, where v2 uses docker --runtime=nvidia.) Docker Usage 123456789101112131415161718docker ps -a #check all containersdocker rm $(docker ps -aq) #delete all containersdocker images #check all imagesdocker rmi $(docker images -q) #delete all imagesdocker rmi node_name #delete node(image)docker infodocker version# create a container named tf and run it# -it : interactive# --name : assign the name \"tf\" to this container# -p : mapping ports of container to host, first pair for Jupyter notebook, the second one for Tensorboard# -v host_folder:container_folder : enables sharing a folder between the host and the container. The host folder should be inside your home directory. This folder is seen as notebooks directory in the container which is used by Ipython/Jupyter Notebook.docker run -it -p 8888:8888 -p 6006:6006 -v $(pwd)/tensorflow:/notebooks --name tf tensorflow/tensorflowdocker start -i tf #start container named tf with interactive mode Anaconda and PytorchInstalling anaconda3 firstly, then create an environment named “pytorch” for pytorch compatible with cuda 10, lastly, enter this environment. 12345wget http://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh./Anaconda3-2018.12-Linux-x86_64.shconda create -n pytorch pytorch torchvision cuda100 -c pytorchsource activate pytorch Install packages in the pytorch environment we created before.12345source /opt/anaconda/bin/activate pytorchconda install opencvconda install -c conda-forge opencv=4.2 (or this)conda install scikit-learnconda install -c conda-forge matplotlib or use pip package manager to install pytorch 12$ pip3 --no-cache-dir install torch$ pip3 --no-cache-dir install torchvision xclip1sudo pacman -S xclip githubAdd ssh key : 1234567ssh-keygen -t rsa -b 4096 -C \"youremail@gmail.com\"eval \"$(ssh-agent -s)\"ssh-add ~/.ssh/id_rsaxclip -sel clip &lt; ~/.ssh/id_rsa.pub# change your origin remote to ssh url from https urlgit remote set-url origin git@github.com:&lt;Username&gt;/&lt;Project&gt;.git Go to github add a new key, then paste the content of the clipboard to it. (If count problem “ssh: connect to host github.com port 22: Connection refused”, go to create a config file for ssh) 123Host github.comHostname ssh.github.comPort 443 Put the content above to the file ~/.ssh/config. Mediampd + ncmpcpp + cantata + mps-youtube + youtube-dl + mpv Fuzzy Finder1sudo pacman -S fzf Text EditorVim &amp; Neovim &amp; as IDEvim plugin manager: vim-plugcode-searching tool: the_silver_searcher (ag)Plugins for making a IDE: coc.vim and its extensions (coc-python, coc-snippets, coc-vimtex)12345678sudo pacman -S vim neovimsudo pacman -S the_silver_searchercurl -fLo ~/.vim/autoload/plug.vim --create-dirs \\https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vimsudo pacman -S pip3sudo pip3 install python-language-serveryay -S ccls-gitpip3 install --user --upgrade pynvim 1sudo pacman -S ctags chemacs123git clone https://github.com/plexus/chemacs.gitcd chemacs./install.sh Use Doom-Emacs with chemacs12touch ~/.emacs-profiles.elmkdir -p ~/Git/doom put the content below to ~/.emacs-profiles.el123((&quot;default&quot; . ((user-emacs-directory . &quot;~/.emacs.d&quot;))) (&quot;doom&quot; . ((user-emacs-directory . &quot;~/Git/doom&quot;) (env . ((&quot;DOOMDIR&quot; . &quot;~/.doom.d&quot;)))))) 1234git clone -b develop https://github.com/hlissner/doom-emacs ~/Git/doom~/Git/doom/bin/doom -p ~/.doom.d quickstartmake installemacs --with-profile doom &amp; Use Spacemacs with chemacs12mkdir -p ~/Git/spacemacsgit clone https://github.com/syl20bnr/spacemacs.git ~/Git/spacemacs Doom-Emacs1234git clone -b develop https://github.com/hlissner/doom-emacs ~/.emacs.d~/.emacs.d/bin/doom quickstartcd .emacs.dmake install EmacsConfigure lsp-mode and pyls-ms (Microsoft Python Language Server)123456sudo pacman -S dotnet-sdkmkdir ~/buildcd buildgit clone https://github.com/Microsoft/python-language-server.gitcd python-language-server/src/LanguageServer/Impldotnet build -c Release Book Reader12sudo pacman -S zathura zathura-pdf-poppler zathura-pdf-mupdfsudo pacman -S calibre Latex1sudo pacman -S texlive-most Sync tool1sudo pacman -S syncthing Input Methodfcitx1sudo pacman -S fcitx-im fcitx-configtool fcitx-mozc fcitx-sunpinyin then add input method using fcitx-configtool. (OR ibus1sudo pacman -S ibus ibus-rime ibus-anthy Change the default chinese input method to simplified, within the file ~/.config/ibus/rime/build/luna_pinyin.schema.yaml put reset: 1 underneath the name: simplification.) SwitchyOmegaIn auto switch profile, in Rule list confifug, select AutoProxy, and put the following content into Rule list url.1https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt Mount usbSee the usb’s device name1dmesg | tail said, /dev/sdb, then go to make a mount point, and mount itfor example12sudo mkdir -p /mnt/media/usbmount /dev/sdb1 /mnt/media/usb 1umount /dev/sdb1 Cron1sudo pacman -S cronie Draw figures1sudo pacman -S inkscape Color Schedule1sudo pacman -S python-pywal X hotkey daemon1sudo pacman -S sxhkd Menu1sudo pacman -S dmenu Notification1sudo pacman -S dunst Enable to connect to android1sudo pacman -S mtpfs gvfs-mtp gvfs-gphoto2 Package Manager1sudo pacman -S yarn Compositor with blur12345git clone https://github.com/tryone144/compton.gitsudo pacman -S libconfig asciidocmakemake docsmake install Compositor1sudo pacman -S compton Swap Caps and Esc keyFor console:1234sudo mkdir -p /usr/local/share/kbd/keymapssudo echo \"keycode 1 = Caps_Lock\\nkeycode 58 = Escape\" &gt; /usr/local/share/kbd/keymaps/personal.mapsudo echo \"KEYMAP=/usr/local/share/kbd/keymaps/personal.map\" &gt;&gt; /etc/vconsole.conf For X:add a new file named .Xmodmap (for details see my dot files), then1xmodmap ~/.Xmodmap (note: if you want to attach an external keyboard, you also need to execute theabove command) TouchpadPermanent changePut following content to file /etc/X11/xorg.conf.d/40-touchpad.conf123456Section &quot;InputClass&quot; Identifier &quot;libinput touchpad catchall&quot; MatchIsTouchpad &quot;on&quot; Driver &quot;libinput&quot; Option &quot;Tapping&quot; &quot;on&quot;EndSection Runtime changereplace the following command with appropriate values.1234sudo pacman -S xorg-xinputxinputxinput --list-props your_device_idxinput set-prop your_device_id \"want_to_change_prop\" changed_number NetworknetworkmanagerInstall networkmanager123sudo pacman -S networkmanagernmcli device wifi listnmcli device wifi connect your_wifi_SSID password your_password netctl wireless 1sudo pacman -S dialog wpa_suppliant wired 1sudo pacman -S ifplugd Find your ethernet interface using ip link command, andstart/enable the `netctl-ifplugd@interface.service` systemd unit. (note: change the above interface with your ethernet interface) Dict1sudo pacman -S goldendict ADB1sudo pacman -S android-tools Nvidia Driver12sudo pacman -S nvidia nvidia-utils bbswitchyay -S nvidia-xrun and go to configure .nvidia-xinitrc VirtualBox1234sudo pacman -S virtualboxsystemctl start systemd-modules-load.servicesudo modprobe vboxdrvyay -S virtualbox-ext-oracle (note: while installing select virtualbox-host-modules-arch) MiscGNU Debugger:1sudo pacman -S gdb Memory Debugging:1sudo pacman -S valgrind Snap:12yay -S snapdsystemctl start snapd.socket Godot game engineScons build tool:1sudo pacman -S scons 1yay -S godot-git Sticky notes:1yay -S qtpad Image Viewer1sudo pacman -S sxiv Weather1curl wttr.in 1sudo pacman -S ntfs-3g Bluetooth123sudo pacman -S bluez bluez-utilssystemctl start bluetooth.servicebluetoothctl MySQL/MariaDB1234sudo pacman -S mariadbsudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysqlsystemctl start mariadb.servicesudo pip install mysql-connector 1sudo mysql -u root -p after enter into MariaDB, assign a password for root user, so you can enter MariaDB without ‘sudo’: 1ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;your_password&apos; tldr1sudo pacman -S tldr References Installation guide How do I start tensorflow docker jupyter notebook Configure Emacs, lsp-mode and pyls-ms How I draw figures for my mathematical lecture notes using Inkscape Dot files","categories":[{"name":"Linux","slug":"Linux","permalink":"https://wjwrobot.github.io/categories/Linux/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://wjwrobot.github.io/tags/Arch-Linux/"},{"name":"Linux","slug":"Linux","permalink":"https://wjwrobot.github.io/tags/Linux/"}]},{"title":"Enable Colaboratory to Use Local Runtime","slug":"Enable-Colaboratory-use-local-runtime","date":"2019-01-23T08:44:25.000Z","updated":"2019-01-23T09:09:56.000Z","comments":true,"path":"2019/01/23/Enable-Colaboratory-use-local-runtime/","link":"","permalink":"https://wjwrobot.github.io/2019/01/23/Enable-Colaboratory-use-local-runtime/","excerpt":"Enable Google Colaboratory to use local runtime through Jupyter Notebook.","text":"Enable Google Colaboratory to use local runtime through Jupyter Notebook. Install Jupyter Notebook1$ sudo pacman -S jupyter-notebook Enable interactive Javascript widgets in the notebooks: 1$ sudo jupyter nbextension enable --py --sys-prefix widgetsnbextension Install and enable the jupyter_http_over_ws jupyter extension12$ sudo pip install jupyter_http_over_ws$ jupyter serverextension enable --py jupyter_http_over_ws Start server and authenticate1234$ jupyter notebook \\ --NotebookApp.allow_origin='https://colab.research.google.com' \\ --port=8888 \\ --NotebookApp.port_retries=0 Connect to the local runtimeIn Colaboratory, click the “Connect” button and select “Connect to local runtime…” Note: If you use firefox, you must set the network.websocket.allowInsecureFromHTTPS to be true. In the address bar, type about:config and press Enter, then type network.websocket.allowInsecureFromHTTPS and set its value to be true. References: Install Jupyter Colaboratory local runtime","categories":[{"name":"Software","slug":"Software","permalink":"https://wjwrobot.github.io/categories/Software/"}],"tags":[{"name":"Colaboratory","slug":"Colaboratory","permalink":"https://wjwrobot.github.io/tags/Colaboratory/"},{"name":"Jupyter Notebook","slug":"Jupyter-Notebook","permalink":"https://wjwrobot.github.io/tags/Jupyter-Notebook/"}]},{"title":"Building Personal Website with Github","slug":"build_site_with_github","date":"2019-01-19T16:00:00.000Z","updated":"2019-05-05T13:06:29.480Z","comments":true,"path":"2019/01/20/build_site_with_github/","link":"","permalink":"https://wjwrobot.github.io/2019/01/20/build_site_with_github/","excerpt":"A tutorial for building your own website make use of github and hexo, with a beautiful theme “material-x”.","text":"A tutorial for building your own website make use of github and hexo, with a beautiful theme “material-x”. Install hexo​ You should alread install git and nodejs. 1$ npm install -g hexo-cli ​ Hexo create a directory for your project: 12$ hexo init &lt;folder&gt;$ cd &lt;folder&gt; ​ Hexo will build a skeleton for your site: 1$ npm install ​ Test whether everything is ok: 1$ hexo server ​ If it works well. you can change the theme, which can be found on hexo site. I will use material-x theme : 12$ cd themes$ git clone https://github.com/xaoxuu/hexo-theme-material-x themes/material-x ​ Then install dependencies: 1$ npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content hexo-recommended-posts hexo-helper-qrcode ​ Go to the your project’s root directory, and configure the file _config.yml. ​ Item theme: change its value to your theme’s name, for example: 1theme: material-x Install git deploy plugin​ Look for deploy item ,and modify it like follow: 1234deploy: type: git repo: git@github.com:wjwrobot/wjwrobot.github.io.git branch: master ​ After that we are going to install git deploy plugin: 1$ npm install hexo-deployer-git --save ​ Latsly, you can configure your theme according to this tutorial . Deploy to your github website​ Before deploy it to github, test it on local machine: 12$ hexo generator # or hexo g$ hexo server # or hexo s ​ Open a browser ,input following address: 1http://localhost:4000/ ​ If work well deploy it to github 1$ hexo deploy # or hexo d ​ Create a repo for your theme​ Change your pwd to your installed theme directory. Then use browser to create a repo and name it (e.g.hexo-theme-material-x). Change remote origin to your repo and add the origin author’s repo as remote upstream for later updating. 12345$ git remote -v$ git remote remove origin$ git remote add origin https://github.com/wjwrobot/hexo-theme-material-x.gi$ git push origin master$ git remote add upstream https://github.com/xaoxuu/hexo-theme-material-x.git ​ If upstream has update, you can use fetch command to get it and merge upstream/master to local master: 12$ git fetch upstream$ git merge upstream/master ​ Push to remote repo: 1$ git push origin master","categories":[{"name":"Nodejs","slug":"Nodejs","permalink":"https://wjwrobot.github.io/categories/Nodejs/"}],"tags":[{"name":"git","slug":"git","permalink":"https://wjwrobot.github.io/tags/git/"},{"name":"hexo","slug":"hexo","permalink":"https://wjwrobot.github.io/tags/hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"https://wjwrobot.github.io/tags/nodejs/"}]},{"title":"My New Post","slug":"My-New-Post","date":"2019-01-18T14:47:55.000Z","updated":"2019-01-20T11:35:38.000Z","comments":true,"path":"2019/01/18/My-New-Post/","link":"","permalink":"https://wjwrobot.github.io/2019/01/18/My-New-Post/","excerpt":"","text":"","categories":[{"name":"other","slug":"other","permalink":"https://wjwrobot.github.io/categories/other/"}],"tags":[{"name":"test","slug":"test","permalink":"https://wjwrobot.github.io/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-01-17T16:00:00.000Z","updated":"2019-01-19T16:00:00.000Z","comments":true,"path":"2019/01/18/hello-world/","link":"","permalink":"https://wjwrobot.github.io/2019/01/18/hello-world/","excerpt":"It is a test post.","text":"It is a test post. Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Video","categories":[{"name":"other","slug":"other","permalink":"https://wjwrobot.github.io/categories/other/"}],"tags":[{"name":"test","slug":"test","permalink":"https://wjwrobot.github.io/tags/test/"}]}]}